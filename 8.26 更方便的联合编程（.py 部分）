
from ctypes import *  # cdll, c_int
lib = cdll.LoadLibrary('./c_c++_loss/libmathBuf.so')
class callsubBuf(object):
    def __init__(self):
        self.obj = lib.subBuf_new()

    def callcursubBuf(self, data, num, outData):
        lib.subBuf_sub(self.obj, data, num, outData)

    def call_call(self, data1, x, y, data3):
        lib.call_call_call(self.obj, data1, x, y,  data3)

        
        
                x, y = real_img[0][1].shape
                l = []
                s = 0
                data1 = (c_float * 330000)()
                # data2 = (c_float * len(l))()
                data3 = (c_float * 330000)()
                for m in range(0, x):
                    for i in real_img[0][1][m]:
                        # print(s)
                        data1[s] = c_float(i)
                        s += 1
                # # x, y = fake_img[0][1].shape
                # # l=[]
                # # for m in range(0, x):
                # #     for i in fake_img[0][1][m]:
                # #         l.append(i)
                # # # print(len(l))
                # # s = len(l)
                # # l1 = []
                # # for i in range(0, s):
                # #     l1.append(c_float(float(l[i])))
                # #
                # # data1 = (c_float * len(l))()
                # # # data2 = (c_float * len(l))()
                # # data3 = (c_float * len(l))()
                # #
                # # for i in range(len(l)):
                # #     data1[i] = l1[i]
                #
                f1 = callsubBuf()
                f1.call_call(data1, x, y, data3)
                print("D  truth picture",data3[0])
